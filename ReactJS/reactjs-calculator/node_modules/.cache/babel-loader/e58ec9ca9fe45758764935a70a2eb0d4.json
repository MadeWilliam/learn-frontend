{"ast":null,"code":"import _classCallCheck from \"/home/pupul/project/dilo-babastudio/frontend/dilo-william/modul1/reactjs-calculator/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/pupul/project/dilo-babastudio/frontend/dilo-william/modul1/reactjs-calculator/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/pupul/project/dilo-babastudio/frontend/dilo-william/modul1/reactjs-calculator/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/pupul/project/dilo-babastudio/frontend/dilo-william/modul1/reactjs-calculator/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/pupul/project/dilo-babastudio/frontend/dilo-william/modul1/reactjs-calculator/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/pupul/project/dilo-babastudio/frontend/dilo-william/modul1/reactjs-calculator/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/pupul/project/dilo-babastudio/frontend/dilo-william/modul1/reactjs-calculator/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.updateResult = function (event) {\n      _this.setState({\n        result: event.target.name\n      });\n    };\n\n    _this.state = {\n      result: 0,\n      result2: 0\n    };\n    _this.makeButton = _this.makeButton.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.makeOperator = _this.makeOperator.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"makeButton\",\n    value: function makeButton(min, max) {\n      var buttonArray = [];\n\n      for (var index = min; index <= max; index++) {\n        var cl = \"button-\" + index;\n        buttonArray.push(React.createElement(\"button\", {\n          key: cl,\n          className: \"numberButton\",\n          name: index,\n          onClick: this.updateResult,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, index));\n      }\n\n      return buttonArray;\n    }\n  }, {\n    key: \"makeOperator\",\n    value: function makeOperator(handleClick, operationType) {\n      var operationTypeList = {\n        add: \"+\",\n        subtract: \"-\",\n        divide: \"/\",\n        multiply: \"*\",\n        submit: \"=\"\n      };\n      var cl = \"button-\" + operationType;\n      return React.createElement(\"button\", {\n        key: cl,\n        className: \"operationButton\",\n        name: operationTypeList[operationType],\n        onClick: handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, operationTypeList[operationType]);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"result\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, this.state.result), React.createElement(\"div\", {\n        className: \"buttonWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, this.makeButton(1, 3), this.makeOperator(this.updateResult, \"add\"), this.makeOperator(this.updateResult, \"subtract\")), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, this.makeButton(4, 6), this.makeOperator(this.updateResult, \"divide\"), this.makeOperator(this.updateResult, \"multiply\")), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, this.makeButton(7, 9), this.makeButton(0, 0), this.makeOperator(this.updateResult, \"submit\")))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/pupul/project/dilo-babastudio/frontend/dilo-william/modul1/reactjs-calculator/src/App.js"],"names":["React","Component","App","props","updateResult","event","setState","result","target","name","state","result2","makeButton","bind","makeOperator","min","max","buttonArray","index","cl","push","handleClick","operationType","operationTypeList","add","subtract","divide","multiply","submit"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            result: 0,\n            result2: 0\n        };\n        this.makeButton = this.makeButton.bind(this);\n        this.makeOperator = this.makeOperator.bind(this);\n    }\n\n    updateResult = event => {\n        this.setState({ result: event.target.name });\n    };\n\n    makeButton(min, max) {\n        let buttonArray = [];\n\n        for (let index = min; index <= max; index++) {\n            let cl = \"button-\" + index;\n            buttonArray.push(\n                <button\n                    key={cl}\n                    className=\"numberButton\"\n                    name={index}\n                    onClick={this.updateResult}\n                >\n                    {index}\n                </button>\n            );\n        }\n        return buttonArray;\n    }\n\n    makeOperator(handleClick, operationType) {\n        let operationTypeList = {\n            add: \"+\",\n            subtract: \"-\",\n            divide: \"/\",\n            multiply: \"*\",\n            submit: \"=\"\n        };\n\n        let cl = \"button-\" + operationType;\n        return (\n            <button\n                key={cl}\n                className=\"operationButton\"\n                name={operationTypeList[operationType]}\n                onClick={handleClick}\n            >\n                {operationTypeList[operationType]}\n            </button>\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"wrapper\">\n                    <div className=\"result\">{this.state.result}</div>\n                    <div className=\"buttonWrapper\">\n                        <div className=\"row\">\n                            {this.makeButton(1, 3)}\n                            {this.makeOperator(this.updateResult, \"add\")}\n                            {this.makeOperator(this.updateResult, \"subtract\")}\n                        </div>\n                        <div className=\"row\">\n                            {this.makeButton(4, 6)}\n                            {this.makeOperator(this.updateResult, \"divide\")}\n                            {this.makeOperator(this.updateResult, \"multiply\")}\n                        </div>\n                        <div className=\"row\">\n                            {this.makeButton(7, 9)}\n                            {this.makeButton(0, 0)}\n                            {this.makeOperator(this.updateResult, \"submit\")}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}