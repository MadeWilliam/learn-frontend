{"ast":null,"code":"import _classCallCheck from \"/home/pupul/project/dilo-babastudio/frontend/dilo-william/modul1/reactjs-calculator/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/pupul/project/dilo-babastudio/frontend/dilo-william/modul1/reactjs-calculator/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/pupul/project/dilo-babastudio/frontend/dilo-william/modul1/reactjs-calculator/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/pupul/project/dilo-babastudio/frontend/dilo-william/modul1/reactjs-calculator/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/pupul/project/dilo-babastudio/frontend/dilo-william/modul1/reactjs-calculator/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/pupul/project/dilo-babastudio/frontend/dilo-william/modul1/reactjs-calculator/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\"; // import Button from \"./components/Button\";\n\nimport Input from \"./components/Input\";\nimport ClearButton from \"./components/ClearButton\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.isOperator = function (val) {\n      return !isNaN(val) || val === \".\" || val === \"=\";\n    };\n\n    _this.addToInput = function (val) {\n      _this.setState({\n        input: _this.state.input + val\n      });\n    };\n\n    _this.addDecimal = function (val) {\n      // only add decimal if there is no current decimal point present in the input area\n      if (_this.state.input.indexOf(\".\") === -1) {\n        _this.setState({\n          input: _this.state.input + val\n        });\n      }\n    };\n\n    _this.addZeroToInput = function (val) {\n      // if this.state.input is not empty then add zero\n      if (_this.state.input !== \"\") {\n        _this.setState({\n          input: _this.state.input + val\n        });\n      }\n    };\n\n    _this.clearInput = function () {\n      _this.setState({\n        input: \"\"\n      });\n    };\n\n    _this.add = function () {\n      _this.state.previousNumber = _this.state.input;\n\n      _this.setState({\n        input: \"\"\n      });\n\n      _this.state.operator = \"plus\";\n    };\n\n    _this.subtract = function () {\n      _this.state.previousNumber = _this.state.input;\n\n      _this.setState({\n        input: \"\"\n      });\n\n      _this.state.operator = \"subtract\";\n    };\n\n    _this.multiply = function () {\n      _this.state.previousNumber = _this.state.input;\n\n      _this.setState({\n        input: \"\"\n      });\n\n      _this.state.operator = \"multiply\";\n    };\n\n    _this.divide = function () {\n      _this.state.previousNumber = _this.state.input;\n\n      _this.setState({\n        input: \"\"\n      });\n\n      _this.state.operator = \"divide\";\n    };\n\n    _this.evaluate = function () {\n      _this.state.currentNumber = _this.state.input;\n\n      if (_this.state.operator == \"plus\") {\n        _this.setState({\n          input: parseInt(_this.state.previousNumber) + parseInt(_this.state.currentNumber)\n        });\n      } else if (_this.state.operator == \"subtract\") {\n        _this.setState({\n          input: parseInt(_this.state.previousNumber) - parseInt(_this.state.currentNumber)\n        });\n      } else if (_this.state.operator == \"multiply\") {\n        _this.setState({\n          input: parseInt(_this.state.previousNumber) * parseInt(_this.state.currentNumber)\n        });\n      } else if (_this.state.operator == \"divide\") {\n        _this.setState({\n          input: parseInt(_this.state.previousNumber) / parseInt(_this.state.currentNumber)\n        });\n      }\n    };\n\n    _this.state = {\n      input: \"\",\n      previousNumber: \"\",\n      currentNumber: \"\",\n      operator: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"Button\",\n    value: function Button() {\n      var _this2 = this;\n\n      return React.createElement(\"button\", {\n        className: \"button \".concat(this.isOperator(this.children) ? \"\" : \"operator\"),\n        onClick: function onClick() {\n          return _this2.handleClick(_this2.children);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, this.props.children);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"calc-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, this.state.input)), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(this.Button, {\n        handleClick: this.addToInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"7\"), React.createElement(this.Button, {\n        handleClick: this.addToInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"8\"), React.createElement(this.Button, {\n        handleClick: this.addToInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"9\"), React.createElement(this.Button, {\n        handleClick: this.divide,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"/\")), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(this.Button, {\n        handleClick: this.addToInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"4\"), React.createElement(this.Button, {\n        handleClick: this.addToInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"5\"), React.createElement(this.Button, {\n        handleClick: this.addToInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"6\"), React.createElement(this.Button, {\n        handleClick: this.multiply,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"*\")), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(this.Button, {\n        handleClick: this.addToInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"1\"), React.createElement(this.Button, {\n        handleClick: this.addToInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"2\"), React.createElement(this.Button, {\n        handleClick: this.addToInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"3\"), React.createElement(this.Button, {\n        handleClick: this.add,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"+\")), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(this.Button, {\n        handleClick: this.addDecimal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \".\"), React.createElement(this.Button, {\n        handleClick: this.addZeroToInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"0\"), React.createElement(this.Button, {\n        handleClick: this.evaluate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"=\"), React.createElement(this.Button, {\n        handleClick: this.subtract,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"-\")), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(ClearButton, {\n        handleClear: this.clearInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Clear\"))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/pupul/project/dilo-babastudio/frontend/dilo-william/modul1/reactjs-calculator/src/App.js"],"names":["React","Component","Input","ClearButton","App","props","isOperator","val","isNaN","addToInput","setState","input","state","addDecimal","indexOf","addZeroToInput","clearInput","add","previousNumber","operator","subtract","multiply","divide","evaluate","currentNumber","parseInt","children","handleClick"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\n// import Button from \"./components/Button\";\nimport Input from \"./components/Input\";\nimport ClearButton from \"./components/ClearButton\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      input: \"\",\n      previousNumber: \"\",\n      currentNumber: \"\",\n      operator: \"\"\n    };\n  }\n\n  isOperator = val => {\n    return !isNaN(val) || val === \".\" || val === \"=\";\n  };\n\n  Button() {\n      return( \n        <button \n          className={`button ${this.isOperator(this.children) ? \"\" : \"operator\"}`}\n          onClick={() => this.handleClick(this.children)}\n        >\n          {this.props.children}\n        </button>\n      )\n    }\n  \n  addToInput = val => {\n    this.setState({ input: this.state.input + val });\n  };\n\n  addDecimal = val => {\n    // only add decimal if there is no current decimal point present in the input area\n    if (this.state.input.indexOf(\".\") === -1) {\n      this.setState({ input: this.state.input + val });\n    }\n  };\n\n  addZeroToInput = val => {\n    // if this.state.input is not empty then add zero\n    if (this.state.input !== \"\") {\n      this.setState({ input: this.state.input + val });\n    }\n  };\n\n  clearInput = () => {\n    this.setState({ input: \"\" });\n  };\n\n  add = () => {\n    this.state.previousNumber = this.state.input;\n    this.setState({ input: \"\" });\n    this.state.operator = \"plus\";\n  };\n\n  subtract = () => {\n    this.state.previousNumber = this.state.input;\n    this.setState({ input: \"\" });\n    this.state.operator = \"subtract\";\n  };\n  \n  multiply = () => {\n    this.state.previousNumber = this.state.input;\n    this.setState({ input: \"\" });\n    this.state.operator = \"multiply\";\n  };\n\n  divide = () => {\n    this.state.previousNumber = this.state.input;\n    this.setState({ input: \"\" });\n    this.state.operator = \"divide\";\n  };\n\n  evaluate = () => {\n    this.state.currentNumber = this.state.input;\n\n    if (this.state.operator == \"plus\") {\n      this.setState({\n        input:\n          parseInt(this.state.previousNumber) +\n          parseInt(this.state.currentNumber)\n      });\n    } else if (this.state.operator == \"subtract\") {\n      this.setState({\n        input:\n          parseInt(this.state.previousNumber) -\n          parseInt(this.state.currentNumber)\n      });\n    } else if (this.state.operator == \"multiply\") {\n      this.setState({\n        input:\n          parseInt(this.state.previousNumber) *\n          parseInt(this.state.currentNumber)\n      });\n    } else if (this.state.operator == \"divide\") {\n      this.setState({\n        input:\n          parseInt(this.state.previousNumber) /\n          parseInt(this.state.currentNumber)\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"calc-wrapper\">\n          <div className=\"row\">\n            <Input>{this.state.input}</Input>\n          </div>\n          <div className=\"row\">\n            <this.Button handleClick={this.addToInput}>7</this.Button>\n            <this.Button handleClick={this.addToInput}>8</this.Button>\n            <this.Button handleClick={this.addToInput}>9</this.Button>\n            <this.Button handleClick={this.divide}>/</this.Button>\n          </div>\n          <div className=\"row\">\n            <this.Button handleClick={this.addToInput}>4</this.Button>\n            <this.Button handleClick={this.addToInput}>5</this.Button>\n            <this.Button handleClick={this.addToInput}>6</this.Button>\n            <this.Button handleClick={this.multiply}>*</this.Button>\n          </div>\n          <div className=\"row\">\n            <this.Button handleClick={this.addToInput}>1</this.Button>\n            <this.Button handleClick={this.addToInput}>2</this.Button>\n            <this.Button handleClick={this.addToInput}>3</this.Button>\n            <this.Button handleClick={this.add}>+</this.Button>\n          </div>\n          <div className=\"row\">\n            <this.Button handleClick={this.addDecimal}>.</this.Button>\n            <this.Button handleClick={this.addZeroToInput}>0</this.Button>\n            <this.Button handleClick={this.evaluate}>=</this.Button>\n            <this.Button handleClick={this.subtract}>-</this.Button>\n          </div>\n          <div className=\"row\">\n            <ClearButton handleClear={this.clearInput}>Clear</ClearButton>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}